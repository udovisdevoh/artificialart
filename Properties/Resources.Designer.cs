//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArtificialArt.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ArtificialArt.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot;abatable&quot;&gt;
        ///        &lt;toWord name=&quot;unstoppable&quot; statisticValue=&quot;1&quot; /&gt;
        ///    &lt;/fromWord&gt;
        ///    &lt;fromWord name=&quot;abdicable&quot;&gt;
        ///        &lt;toWord name=&quot;wanted&quot; statisticValue=&quot;1&quot; /&gt;
        ///    &lt;/fromWord&gt;
        ///    &lt;fromWord name=&quot;abdominous&quot;&gt;
        ///        &lt;toWord name=&quot;thin&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;lean&quot; statisticValue=&quot;1&quot; /&gt;
        ///    &lt;/fromWord&gt;
        ///    &lt;fromWord name=&quot;abeyant&quot;&gt;
        ///        &lt;toWord name=&quot;active&quot; statisticValue=&quot;1&quot; /&gt;
        ///    &lt;/fromW [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string antonymList {
            get {
                return ResourceManager.GetString("antonymList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; N&quot;&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;701&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;636&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;1405&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;82&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;611&quot; /&gt;
        ///        &lt;toWord name=&quot;.&quot; statisticValue=&quot;19&quot; /&gt;
        ///        &lt;toWord name=&quot;S&quot; statisticValue=&quot;5&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticVal [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dutch_language_matrix {
            get {
                return ResourceManager.GetString("dutch_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; N&quot;&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;701&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;636&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;1405&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;82&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;611&quot; /&gt;
        ///        &lt;toWord name=&quot;.&quot; statisticValue=&quot;19&quot; /&gt;
        ///        &lt;toWord name=&quot;S&quot; statisticValue=&quot;5&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticVal [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dutch_language_matrix1 {
            get {
                return ResourceManager.GetString("dutch_language_matrix1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; T&quot;&gt;
        ///        &lt;toWord name=&quot;H&quot; statisticValue=&quot;12672&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;3124&quot; /&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;366&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;316&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;757&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;121&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;292&quot; /&gt;
        ///        &lt;toWord name=&quot;W&quot; statisticValue=&quot;178&quot; /&gt;
        ///        &lt;toWord name=&quot;Y&quot; stat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string english_language_matrix {
            get {
                return ResourceManager.GetString("english_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; H&quot;&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;53&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;73&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;219&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;450&quot; /&gt;
        ///        &lt;toWord name=&quot;É&quot; statisticValue=&quot;77&quot; /&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;123&quot; /&gt;
        ///        &lt;toWord name=&quot;Ô&quot; statisticValue=&quot;5&quot; /&gt;
        ///        &lt;toWord name=&quot;Y&quot; statisticValue=&quot;8&quot; /&gt;
        ///        &lt;toWord name=&quot;.&quot; statisticValue [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string french_language_matrix {
            get {
                return ResourceManager.GetString("french_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; G&quot;&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;2407&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;1102&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;108&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;257&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;139&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticValue=&quot;115&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;69&quot; /&gt;
        ///        &lt;toWord name=&quot;Ä&quot; statisticValue=&quot;5&quot; /&gt;
        ///        &lt;toWord name=&quot;N&quot; statisti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string german_language_matrix {
            get {
                return ResourceManager.GetString("german_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is
        ///am
        ///are
        ///awake	awoke	awoken
        ///be	was  were	been
        ///beat	beat	beaten
        ///become	became	become
        ///begin	began	begun
        ///bend	bent	bent
        ///bet	bet	bet
        ///bid	bid	bid
        ///bite	bit	bitten
        ///blow	blew	blown
        ///break	broke	broken
        ///bring	brought	brought
        ///broadcast	broadcast	broadcast
        ///build	built	built
        ///burn	burned burnt	burned burnt
        ///buy	bought	bought
        ///catch	caught	caught
        ///choose	chose	chosen
        ///come	came	come
        ///cost	cost	cost
        ///cut	cut	cut
        ///dig	dug	dug
        ///do	did	done
        ///draw	drew	drawn
        ///dream	dreamed dreamt	dreamed dreamt
        ///drive	drove	dr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string irregularVerbList {
            get {
                return ResourceManager.GetString("irregularVerbList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; L&quot;&gt;
        ///        &lt;toWord name=&quot;&apos;&quot; statisticValue=&quot;1669&quot; /&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;1223&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;3263&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;407&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;642&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;280&quot; /&gt;
        ///        &lt;toWord name=&quot;À&quot; statisticValue=&quot;5&quot; /&gt;
        ///        &lt;toWord name=&quot;Y&quot; statisticValue=&quot;2&quot; /&gt;
        ///        &lt;toWord name=&quot;Ì&quot; statisti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string italian_language_matrix {
            get {
                return ResourceManager.GetString("italian_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to can
        ///shall
        ///will
        ///must
        ///may
        ///could
        ///might
        ///ought
        ///should
        ///would.
        /// </summary>
        internal static string modalVerbList {
            get {
                return ResourceManager.GetString("modalVerbList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; P&quot;&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;5244&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;1223&quot; /&gt;
        ///        &lt;toWord name=&quot;Ó&quot; statisticValue=&quot;322&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;3324&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;456&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticValue=&quot;167&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;93&quot; /&gt;
        ///        &lt;toWord name=&quot;.&quot; statisticValue=&quot;90&quot; /&gt;
        ///        &lt;toWord name=&quot;S&quot; statis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string polish_language_matrix {
            get {
                return ResourceManager.GetString("polish_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; P&quot;&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;2767&quot; /&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;2333&quot; /&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;1748&quot; /&gt;
        ///        &lt;toWord name=&quot;R&quot; statisticValue=&quot;2619&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;215&quot; /&gt;
        ///        &lt;toWord name=&quot;Á&quot; statisticValue=&quot;30&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticValue=&quot;140&quot; /&gt;
        ///        &lt;toWord name=&quot;Y&quot; statisticValue=&quot;2&quot; /&gt;
        ///        &lt;toWord name=&quot;Ó&quot; statis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string portuguese_language_matrix {
            get {
                return ResourceManager.GetString("portuguese_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ago
        ///apart
        ///aside
        ///away
        ///hence
        ///notwithstanding
        ///on
        ///through.
        /// </summary>
        internal static string postpositionList {
            get {
                return ResourceManager.GetString("postpositionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to aboard
        ///about
        ///above
        ///absent
        ///across
        ///after
        ///against
        ///of
        ///along
        ///alongside
        ///amid
        ///amidst
        ///among
        ///around
        ///as
        ///at
        ///atop
        ///before
        ///behind
        ///below
        ///beneath
        ///beside
        ///between
        ///by
        ///despite
        ///down
        ///during
        ///except
        ///following
        ///for
        ///from
        ///in
        ///inside
        ///like
        ///mid
        ///minus
        ///near
        ///next
        ///notwithstanding
        ///of
        ///off
        ///on
        ///onto
        ///opposite
        ///outside
        ///over
        ///past
        ///plus
        ///regarding
        ///round
        ///save
        ///since
        ///than
        ///through
        ///throughout
        ///till
        ///times
        ///to
        ///toward
        ///under
        ///underneath
        ///until
        ///up
        ///upon
        ///with
        ///to
        ///within
        ///without
        ///aboard
        ///about
        ///above
        ///acro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string prepositionList {
            get {
                return ResourceManager.GetString("prepositionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to all   another   any   anybody   anyone   anything
        ///both
        ///each   each other   either   everybody   everyone   everything
        ///few
        ///he   her   hers   herself   him   himself   his
        ///I   it   its   itself
        ///little
        ///many   me   mine   more   most   much   myself
        ///neither   no one   nobody   none   nothing
        ///one   one another   other   others   ours   ourselves
        ///several   she   some   somebody   someone   something
        ///that   theirs   them   themselves   these   they   this   those
        ///us
        ///we   what   whatever   which   whic [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pronounList {
            get {
                return ResourceManager.GetString("pronounList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to what
        ///when
        ///where
        ///which
        ///who
        ///whom
        ///whose
        ///why
        ///how
        ///do
        ///does
        ///is
        ///are
        ///isn&apos;t
        ///aren&apos;t
        ///won&apos;t
        ///shan&apos;t
        ///am
        ///were
        ///did
        ///didn&apos;t.
        /// </summary>
        internal static string questionBeginWordList {
            get {
                return ResourceManager.GetString("questionBeginWordList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to what
        ///who
        ///whom
        ///whose.
        /// </summary>
        internal static string questionEndingWordList {
            get {
                return ResourceManager.GetString("questionEndingWordList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to accept
        ///add
        ///admire
        ///admit
        ///advise
        ///afford
        ///agree
        ///alert
        ///allow
        ///amuse
        ///analyse
        ///announce
        ///annoy
        ///answer
        ///apologise
        ///appear
        ///applaud
        ///appreciate
        ///approve
        ///argue
        ///arrange
        ///arrest
        ///arrive
        ///ask
        ///attach
        ///attack
        ///attempt
        ///attend
        ///attract
        ///avoid
        /// 
        ///back
        ///bake
        ///balance
        ///ban
        ///bang
        ///bare
        ///bat
        ///bathe
        ///battle
        ///beam
        ///beg
        ///behave
        ///belong
        ///bleach
        ///bless
        ///blind
        ///blink
        ///blot
        ///blush
        ///boast
        ///boil
        ///bolt
        ///bomb
        ///book
        ///bore
        ///borrow
        ///bounce
        ///bow
        ///box
        ///brake
        ///brake
        ///branch
        ///breathe
        ///bruise
        ///brush
        ///bubble
        ///bump
        ///burn
        ///bury
        ///buzz
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string regularVerbList {
            get {
                return ResourceManager.GetString("regularVerbList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot; L&quot;&gt;
        ///        &lt;toWord name=&quot;A&quot; statisticValue=&quot;7870&quot; /&gt;
        ///        &lt;toWord name=&quot;O&quot; statisticValue=&quot;3170&quot; /&gt;
        ///        &lt;toWord name=&quot;L&quot; statisticValue=&quot;396&quot; /&gt;
        ///        &lt;toWord name=&quot;I&quot; statisticValue=&quot;467&quot; /&gt;
        ///        &lt;toWord name=&quot;U&quot; statisticValue=&quot;272&quot; /&gt;
        ///        &lt;toWord name=&quot;E&quot; statisticValue=&quot;482&quot; /&gt;
        ///        &lt;toWord name=&quot;Í&quot; statisticValue=&quot;102&quot; /&gt;
        ///        &lt;toWord name=&quot;&apos;&quot; statisticValue=&quot;2&quot; /&gt;
        ///        &lt;toWord name=&quot;Ó&quot; statist [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spanish_language_matrix {
            get {
                return ResourceManager.GetString("spanish_language_matrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to although
        ///because
        ///time
        ///though
        ///if
        ///case
        ///that
        ///once
        ///since
        ///though
        ///unless
        ///until
        ///when 
        ///whenever
        ///whereas
        ///while
        ///whether
        ///wherever
        ///who.
        /// </summary>
        internal static string subordinatingConjunctionBeforeSubjectList {
            get {
                return ResourceManager.GetString("subordinatingConjunctionBeforeSubjectList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;wordMatrix&gt;
        ///    &lt;fromWord name=&quot;aah&quot;&gt;
        ///        &lt;toWord name=&quot;ooh&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;exclaim&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;cry&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;cry out&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;outcry&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;call out&quot; statisticValue=&quot;1&quot; /&gt;
        ///        &lt;toWord name=&quot;shout&quot; statisticValue=&quot;1&quot; /&gt;
        ///    &lt;/fromWord&gt;
        ///    &lt;fromWord name=&quot;abacinate&quot;&gt;
        ///        &lt;toWo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string synonymList {
            get {
                return ResourceManager.GetString("synonymList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;theme name=&quot;love&quot;&gt;
        ///love, baby, feel, need, girl, 
        ///girlfriend, heart, care, kiss, kisses, 
        ///kissed, lips, honey, darling, darlin, 
        ///together, loves, respect, lovers, kissing, 
        ///gurl, gal, romance, tender, adore, 
        ///jealousy, relationship, virgin, sweetheart, girlfriends, 
        ///cherish, romantic, flirt, loving, trust, 
        ///miss, desire, beauty, feelings, loved, 
        ///pure, embrace, dear, passion, lover, 
        ///emotions, babe, soft, precious, couple, 
        ///desires, lovin, lovely, delight, mary, 
        ///emotion, caress, embraced, comp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string themeFile_themes_en {
            get {
                return ResourceManager.GetString("themeFile_themes_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;theme name=&quot;love&quot;&gt;
        ///amour, coeur, deux, destin, aime, 
        ///ensemble, aiment, donnez, aimez, sourire, 
        ///rouge, confiance, sentiment, coeurs, doux, 
        ///aimer, amoureux, sentiments, cher, chaleur, 
        ///passion, douce, charme, bébé, aimé, 
        ///baisé, épouse, pur, embrassez, émotions, 
        ///étreinte, embrasser, doucement, embrassé, pure, 
        ///aimons, chéri, roses, désirs, amie, 
        ///rose, émotion, partager, embrasse, harmonie, 
        ///baisers, confort, précieux, pardonnez, romance, 
        ///compassion, mariée, pureté, caresse, charmes, 
        ///aimabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string themeFile_themes_fr {
            get {
                return ResourceManager.GetString("themeFile_themes_fr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to used
        ///united
        ///turned
        ///wanted
        ///involved
        ///based
        ///expected
        ///concerned
        ///provided
        ///led
        ///added
        ///decided
        ///tried
        ///followed
        ///described
        ///moved
        ///allowed
        ///carried
        ///considered
        ///received
        ///increased
        ///produced
        ///continued
        ///worked
        ///developed
        ///included
        ///reached
        ///reported
        ///established
        ///opened
        ///changed
        ///played
        ///suggested
        ///appeared
        ///feed
        ///offered
        ///passed
        ///published
        ///showed
        ///announced
        ///prepared
        ///limited
        ///raised
        ///returned
        ///married
        ///designed
        ///closed
        ///stopped
        ///walked
        ///failed
        ///associated
        ///remained
        ///interested
        ///accepted
        ///killed
        ///arriv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string undefinedVerbList {
            get {
                return ResourceManager.GetString("undefinedVerbList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is
        ///are
        ///can
        ///shall
        ///will
        ///must
        ///may
        ///could
        ///might
        ///ought
        ///should
        ///would
        ///it&apos;s
        ///he&apos;s
        ///she&apos;s
        ///you&apos;re
        ///they&apos;re
        ///we&apos;re.
        /// </summary>
        internal static string wordToPutNotAfterList {
            get {
                return ResourceManager.GetString("wordToPutNotAfterList", resourceCulture);
            }
        }
    }
}
